/**
\mainpage Integration

This package contains the necessary classes for the proper operation of the CommonSDK.

The CommonSDK is mainly used to control the user's' session and the services lifecycle.

Follow the steps below to integrate CommonSDK in your project.

<h2>1. Dependencies</h2>
Firstly, you must add the CommonSDK.framework into your project. Go to the top level file in your iOS project (it has the same name as your project) and click on the target where you want to integrate this SDK. On the right, in the "General" tab, scroll down and search a section called "Embedded Binaries". Click at the plus (+) button and add the CommonSDK.framework.

<h2>2. Initialization</h2>
Before carrying out any kind of operation, you must initialize the CommonSDK.
In the AppDelegate class of your project, start the CommonSDK using Neuromobile::initWithSecret: method as seen in the code block below:
@code
#import <CommonSDK/CommonSDK.h>

@implementation AppDelegate

...

- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {
   [Neuromobile initWithSecret:@"<your_secret_here>"];
   return YES;
}

...

@end
@endcode

<h2>3. Starting a user session</h2>
All services provided by the CommonSDK require a NeuromobileUser model for the statistics system.

After initializing the CommonSDK properly, you can create a NeuromobileUser model for the services using NeuromobileUser::initWithEmail:andPassword: to create a basic NeuromobileUser instance. Additionally, you can set more properties to improve the accuracy of the statistics system.

When creating a NeuromobileUser model, the email address and the password are mandatory; all other fields are optional and, in case some datum is missing, the builder class will assign the field a default value.

For more information about this process, check NeuromobileUser documentation.

@code
-(void)startUserSession {
   NeuromobileUser *user = [NeuromobileUser initWithEmail:@"email" andPassword:@"password"];
   [Neuromobile setUser:user withListener:self];
}

#pragma mark NeuromobileListener

-(void)onNeuromobileUserSessionInitialized {
   NMCLogger_Verbose(@"User set successfully");
}

-(void)onNeuromobileError:(NSString *)reason {
   NMCLogger_Verbose(@"Error setting user: %@", reason);
}

@endcode

Setting additional user data:
@code
-(void)startUserSession {
   NeuromobileUser *user = [NeuromobileUser initWithEmail:@"email" andPassword:@"password"];
   user.zipCode = @"30001";
   user.gender = GENDER_MALE;
   ...
   [Neuromobile setUser:user withListener:self];
}
@endcode

NeuromobileListener provides methods for receiving callbacks from the CommonSDK operations handler.
After this step, you can start all services you wish. NeuromobileListener::onNeuromobileUserSessionInitialized is a good point to begin.

Check the service's documentation for more information about how to start it.

<h2>4. Closing user session</h2>
If at any point of your application you close the user session, it's highly recommended to close the session at the CommonSDK too. This action will prevent generating incorrect information in the CommonSDK's statistics system.
You can close the user session by using the below code block:

@code
    [Neuromobile closeUserSession];
@endcode

You should take into account that, once you call this function, all services will be stopped. If you start a new user session, you'll have to manually restart all services.
*/
